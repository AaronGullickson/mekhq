# Gradle
# Build your Java project and run tests with Gradle using a Gradle wrapper script.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- azure-pipelines

strategy:
  matrix:
    linux:
      imageName: 'ubuntu-16.04'
    mac:
      imageName: 'macos-10.13'
    windows:
      imageName: 'vs2017-win2016'

pool:
  vmImage: $(imageName)

steps:
- powershell: 'New-Item -ItemType directory -Path $(Build.SourcesDirectory)/build/tmp'

- task: Gradle@2
  inputs:
    workingDirectory: ''
    gradleWrapperFile: 'gradlew'
    gradleOptions: '-Xmx3072m -Djava.io.tmpdir=$(Build.SourcesDirectory)/build/tmp'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.8'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: false
    testResultsFiles: '**/TEST-*.xml'
    tasks: 'releaseAll'

- task: CopyFiles@2
  condition: eq(variables['Agent.OS'], 'Windows_NT')
  inputs:
    sourceFolder: 'MekHQ/build/distributions'
    contents: '**/*windows*'
    targetFolder: '$(Build.ArtifactStagingDirectory)/$(Agent.OS)-$(Agent.OSArchitecture)'

- task: CopyFiles@2
  condition: eq(variables['Agent.OS'], 'Darwin')
  inputs:
    sourceFolder: 'MekHQ/build/distributions'
    contents: '**/*mac*'
    targetFolder: '$(Build.ArtifactStagingDirectory)/$(Agent.OS)-$(Agent.OSArchitecture)'

- task: CopyFiles@2
  condition: eq(variables['Agent.OS'], 'Linux')
  inputs:
    sourceFolder: 'MekHQ/build/distributions'
    contents: '**/*.tar.gz'
    targetFolder: '$(Build.ArtifactStagingDirectory)/$(Agent.OS)-$(Agent.OSArchitecture)'

- task: PublishBuildArtifacts@1
